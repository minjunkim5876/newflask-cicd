pipeline {
    agent {
        // 젠킨스의 파이프라인 실행 환경을 docker 컨테이너로 사용할까여?
        docker {
            image 'python:3.10' // 도커 이미지
            args '-u root' // 컨테이너 실행에 필요한 옵션 설정
            reuseNode true // 젠킨스의 작업영역과 컨테이너를 연결하여 사용
            registryUrl 'https://index.docker.io/v1/' // 이미지를 다운로드 받을 저장소 지정
            registryCredentialsId 'dockerhub-token' // 저장소의 로그인 정보를 가지는 credential 지정
        }
    }
    environment {
        // 젠킨스에 저장한 자격 증명 정보를 GITHUB_CREDENTIAL 에 저장됨
        // GITHUB_CREDENTIAL_USR: 자격증명 생성할 때 입력한 username 이 저장된 환경변수
        // GITHUB_CREDENTIAL_PSW: 자격증명 생성할 때 입력한 password 가 저장된 환경변수
        GITHUB_CREDENTIAL = credentials('github-token')
        USR = 'minjunkim5876'
        REPO = 'flask-cicd'
    }
    triggers {
        githubPush()
    }
    options {
        timestamps()
        timeout(time: 5, unit: 'MINUTES')
    }
    stages {
        stage('pip install') {
            steps {
                echo 'requirements.txt reading...'
                sh 'pip install -r requirements.txt'
                echo 'pip install done.'
                echo 'flask install success!!'
            }
        }
        stage('flask run') {
            options {
                timeout(time: 1, unit: 'MINUTES')
            }
            steps {
                echo 'flask ready.'
                sh 'python src/main.py &'
                echo 'flask running.'
            }
        }
        stage('endpoint test') {
            steps {
                echo 'http://localhost:5000/ connect...'
                sh 'curl -s localhost:5000'
            }
        }
        stage('github create release') {
            steps {
                script {
                    def response = sh(script: """
                        curl -sSL \
                            -X POST \
                            -H "Accept: application/vnd.github+json" \
                            -H "Authorization: Bearer ${GITHUB_CREDENTIAL_PSW}" \
                            -H "X-GitHub-Api-Version: 2022-11-28" \
                            https://api.github.com/repos/${USR}/${REPO}/releases \
                            -d '{
                                    "tag_name":"v1.1.0",
                                    "target_commitish":"main",
                                    "name":"v1.1.0",
                                    "body":"Description of the release",
                                    "draft":false,
                                    "prerelease":false,
                                    "generate_release_notes":false
                                }'
                    """, returnStdout: true) // 스크립트 실행 후 출력 결과를 response 변수에 저장!
                    
                    def json = readJSON text: "$response"
                    def id = json.id

                    sh 'tar -zcvf flask-web.tar.gz ./src'
                    
                    sh """
                        curl -sSL \
                            -X POST \
                            -H "Accept: application/vnd.github+json" \
                            -H "Authorization: Bearer ${GITHUB_CREDENTIAL_PSW}" \
                            -H "X-GitHub-Api-Version: 2022-11-28" \
                            -H "Content-Type: application/octet-stream" \
                            "https://api.github.com/repos/${USR}/${REPO}/releases/${id}/assets?name=flask-web.tar.gz" \
                            --data-binary "@flask-web.tar.gz"
                    """
                }
            }
        }
    }
}
